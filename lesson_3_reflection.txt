When would you want to use a remote repository rather than keeping all your work
local?
-When looking to work collaboratively, working on different computers or as
another repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
-Updating automatically might pull changes that are from previous commits. The
working copy might have unfinished features that are not ready to show to the
world.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?
- Fork: is a clone of the repository inside the Github ecosystem and server. It allows
to make commits in your own copy of the repository without authorization of the
owner.
Clone: Downloads the repository in the working directory with the .git file
that stores all commits made up to this point. Generates a local copy in the user
computer.
Branch: Creates a separate track from the master in git. Allows to experiment
without compromising the main body of work.

What is the benefit of having a copy of the last known state of the remote
stored locally?
-To being able to make comparison with the remote without an internet access,
also to see its commit history with git log as well as using git diff

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?
-Maybe having separate copies for change made. It would require lots of disk space
Merging would be harder.

When would you want to make changes in a separate branch rather than directly in
master? What benefits does each approach have?
-You just saw that the workflow when making changes in a separate branch is more
 complicated than working directly in master, especially when you need to stay
 up-to-date with changes others are making. Rather than simply pulling and
 pushing, you need to pull changes into your local master branch, merge the
 local master into your branch (different-oil, in our case), then push your
 branch to the remote before finally merging your branch into master, either
 locally or on GitHub.
