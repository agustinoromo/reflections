What happens when you initialize a repository? Why do you need to do it?
-A hidden file with .git extension gets created. It is necessary to start
tracking file changes

How is the staging area different from the working directory and the repository?
What value do you think it offers?
-It works as a way to pre-commit files, sort of an intermediate place for the
repository and the working copy. It allows the developer to build up their
commits however they want.

How can you use the staging area to make sure you have one commit per logical
change?
-By making sure what is on the staging area is what we want to commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
-When you're looking to experiment on something new without compromising the
master branch.

How do the diagrams help you visualize the branch structure?
-Offers a visual guide of the current location of the commit and how it relates
and compares to other branches and commits

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
-Merge the commits of two different branches into a single one. Stacking one on
top of the other based on the commit's timestamp.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
-It is difficult for git to infer logical differences between commits. Git is
better at noticing "literal" differences on our code, in which it notices differences
in our code by noticing lines introduced or deleted.
